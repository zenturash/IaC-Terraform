# Example terraform.tfvars file for Azure ALZ OpenTofu Module
# Copy this file to terraform.tfvars and customize the values

# Architecture Mode - Choose your deployment pattern
architecture_mode = "hub-spoke"  # Options: "single-vnet" or "hub-spoke"

# Global Configuration
admin_username = "azureuser"
admin_password = "YourSecurePassword123!"  # Change this to a secure password
location       = "West Europe"

# Multi-Subscription Configuration
# For single subscription deployment, set all to null
# For multi-subscription ALZ, specify subscription IDs
subscriptions = {
  hub = null  # Hub/Connectivity subscription ID (null = use default subscription)
  spoke = {
    "workload" = null  # Workload subscription ID (null = use default subscription)
    # Add more spokes as needed:
    # "production" = "prod-subscription-id"
    # "development" = "dev-subscription-id"
    # "dmz" = "dmz-subscription-id"
  }
}

# Component Deployment Control
deploy_components = {
  vpn_gateway = true   # Deploy VPN Gateway
  vms         = true   # Deploy Virtual Machines
  peering     = true   # Enable VNet peering (hub-spoke mode only)
}

# Hub VNet Configuration (ALZ Hub-Spoke Mode)
hub_vnet = {
  enabled             = true
  name               = "vnet-hub-connectivity"
  resource_group_name = "rg-hub-connectivity"
  cidr               = "10.1.0.0/20"
  location           = "West Europe"
  subnets            = ["GatewaySubnet", "AzureFirewallSubnet", "ManagementSubnet"]
}

# Spoke VNets Configuration (ALZ Hub-Spoke Mode)
spoke_vnets = {
  "workload" = {
    enabled             = true
    name               = "vnet-spoke-workload"
    resource_group_name = "rg-spoke-workload"
    cidr               = "10.2.0.0/20"
    location           = "West Europe"
    subnets            = ["subnet-web", "subnet-app", "subnet-db"]
    peer_to_hub        = true
  }
  # Example of additional spoke:
  # "production" = {
  #   enabled             = true
  #   name               = "vnet-spoke-production"
  #   resource_group_name = "rg-spoke-production"
  #   cidr               = "10.3.0.0/20"
  #   location           = "West Europe"
  #   subnets            = ["subnet-prod-web", "subnet-prod-app"]
  #   peer_to_hub        = true
  # }
}

# VNet Peering Configuration (ALZ Hub-Spoke Mode)
vnet_peering = {
  enabled                    = true
  allow_virtual_network_access = true
  allow_forwarded_traffic    = true
  allow_gateway_transit      = true   # Hub provides gateway
  use_remote_gateways        = true   # Spokes use hub gateway
}

# VPN Configuration (Controlled by deploy_components.vpn_gateway)
vpn_configuration = {
  vpn_gateway_name = "vpn-gateway-main"
  vpn_gateway_sku  = "VpnGw1"        # Options: Basic, VpnGw1, VpnGw2, VpnGw3, VpnGw1AZ, etc.
  vpn_type         = "RouteBased"    # RouteBased or PolicyBased
  enable_bgp       = false           # Enable BGP routing
  
  local_network_gateway = {
    name            = "local-gateway-office"
    gateway_address = "203.0.113.12"           # Replace with your public IP
    address_space   = ["192.168.0.0/16"]       # Replace with your on-premises networks
  }
  
  vpn_connection = {
    name                = "vpn-connection-office"
    shared_key          = "YourSecureSharedKey123!"  # Change this!
    connection_protocol = "IKEv2"
  }
}

# Define multiple virtual machines with NSG rules
virtual_machines = {
  "web-vm-01" = {
    vm_size             = "Standard_B2s"
    subnet_name         = "subnet-web"
    resource_group_name = "rg-web-tier"
    enable_public_ip    = true
    os_disk_type        = "Premium_LRS"
    spoke_name          = "workload"  # Deploy to workload spoke
    nsg_rules = [
      {
        name                       = "AllowRDP"
        priority                   = 1000
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "3389"
        source_address_prefix      = "YOUR_IP_ADDRESS/32"  # Replace with your IP
        destination_address_prefix = "*"
      },
      {
        name                       = "AllowHTTP"
        priority                   = 1010
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "80"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
      },
      {
        name                       = "AllowHTTPS"
        priority                   = 1020
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "443"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
      }
    ]
  }
  "app-vm-01" = {
    vm_size             = "Standard_D2s_v3"
    subnet_name         = "subnet-app"
    resource_group_name = "rg-app-tier"
    enable_public_ip    = false
    os_disk_type        = "Premium_LRS"
    spoke_name          = "workload"  # Deploy to workload spoke
    # No NSG rules needed for private VMs
  }
  "mgmt-vm-01" = {
    vm_size             = "Standard_B1s"
    subnet_name         = "ManagementSubnet"  # In hub VNet
    resource_group_name = "rg-management"
    enable_public_ip    = true
    os_disk_type        = "StandardSSD_LRS"
    spoke_name          = null  # Deploy to hub (no spoke_name specified)
    nsg_rules = [
      {
        name                       = "AllowRDPFromOffice"
        priority                   = 1000
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "3389"
        source_address_prefix      = "YOUR_OFFICE_IP/32"  # Replace with your office IP
        destination_address_prefix = "*"
      }
    ]
  }
}

# ========================================
# CONFIGURATION EXAMPLES
# ========================================

# Example 1: Single Subscription ALZ
# subscriptions = {
#   hub = null
#   spoke = {
#     "workload" = null
#   }
# }

# Example 2: Multi-Subscription ALZ
# subscriptions = {
#   hub = "12345678-1234-1234-1234-123456789abc"
#   spoke = {
#     "production"  = "87654321-4321-4321-4321-cba987654321"
#     "development" = "11111111-2222-3333-4444-555555555555"
#     "dmz"         = "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
#   }
# }

# Example 3: Single VNet Mode (Legacy)
# architecture_mode = "single-vnet"
# deploy_components = {
#   vpn_gateway = true
#   vms         = true
#   peering     = false  # Not used in single-vnet mode
# }

# ========================================
# MULTI-SPOKE DEPLOYMENT GUIDE
# ========================================

# How to Add Additional Spokes:
# 1. Add subscription to subscriptions.spoke map (if different subscription)
# 2. Add spoke configuration to spoke_vnets
# 3. Optionally add VMs in the new spoke
# 4. VNet peering is automatic for all enabled spokes

# Benefits of ALZ Hub-Spoke:
# ✅ Centralized connectivity through hub
# ✅ Automatic VNet peering between hub and all spokes
# ✅ Shared VPN Gateway for on-premises connectivity
# ✅ Multi-subscription support for governance
# ✅ Scalable architecture for enterprise deployments

# NSG Rule Examples:
# Common protocols: "Tcp", "Udp", "Icmp", "*"
# Common ports: "22" (SSH), "80" (HTTP), "443" (HTTPS), "3389" (RDP), "5985-5986" (WinRM)
# Source IP examples: 
#   - "YOUR_IP/32" (specific IP)
#   - "192.168.1.0/24" (IP range)
#   - "*" (any IP - use carefully!)
#   - "VirtualNetwork" (within VNet)
#   - "Internet" (from internet)
