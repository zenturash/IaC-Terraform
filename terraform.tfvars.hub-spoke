# Azure Landing Zone (ALZ) Hub-Spoke Configuration
# This configuration demonstrates a basic ALZ setup with hub and spoke VNets

# Architecture Mode - Enable ALZ Hub-Spoke
architecture_mode = "hub-spoke"

# Global settings
admin_username = "azureuser"
admin_password = "ComplexPassword123!"
location       = "West Europe"

# Global Tags - Applied to all resources
global_tags = {
  environment     = "Production"
  project         = "Azure ALZ Hub-Spoke"
  creation_method = "OpenTofu"
  owner           = "Platform Team"
  cost_center     = "IT-PROD-001"
  business_unit   = "Infrastructure"
}

# Subscription Configuration (Multi-Subscription ALZ)
# Leave null to use the same subscription for both hub and spoke
subscriptions = {
  hub = null  # Replace with hub subscription ID if different
  spoke = {
    "workload" = null  # Replace with workload subscription ID if different
  }
}

# Example for multi-subscription deployment:
# subscriptions = {
#   hub = "12345678-1234-1234-1234-123456789abc"    # Connectivity subscription
#   spoke = {
#     "workload" = "87654321-4321-4321-4321-cba987654321"    # Workload subscription
#     "dmz"      = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"    # DMZ subscription
#   }
# }

# Component Deployment Control
deploy_components = {
  vpn_gateway = false
  vms         = true
  peering     = true
}


# Hub VNet Configuration (Connectivity)
hub_vnet = {
  enabled             = true
  name               = "vnet-hub-connectivity"
  resource_group_name = "rg-hub-connectivity"
  cidr               = "10.1.0.0/20"
  location           = "West Europe"
  subnets            = ["GatewaySubnet", "AzureFirewallSubnet", "ManagementSubnet"]
}

# Spoke VNets Configuration (Workloads)
spoke_vnets = {
  "workload" = {
    enabled             = true
    name               = "vnet-spoke-workload"
    resource_group_name = "rg-spoke-workload"
    cidr               = "10.2.0.0/20"
    location           = "West Europe"
    subnets            = ["subnet-app", "subnet-data", "subnet-mgmt"]
    peer_to_hub        = true
    spoke_name          = "workload"  # Uses subscriptions.spoke["workload"]
  }
  # Example of additional spoke (disabled by default)
  # "dmz" = {
  #   enabled             = false
  #   name               = "vnet-spoke-dmz"
  #   resource_group_name = "rg-spoke-dmz"
  #   cidr               = "10.3.0.0/20"
  #   location           = "West Europe"
  #   subnets            = ["subnet-web", "subnet-lb"]
  #   peer_to_hub        = true
  #   spoke_name          = "dmz"  # Uses subscriptions.spoke["dmz"]
  # }
}

# VNet Peering Configuration
vnet_peering = {
  enabled                    = true
  allow_virtual_network_access = true
  allow_forwarded_traffic    = true
  allow_gateway_transit      = true   # Hub provides gateway
  use_remote_gateways        = true   # Spokes use hub gateway
}

# VPN Configuration (Controlled by deploy_components.vpn_gateway)
vpn_configuration = {
  vpn_gateway_name = "vpn-gateway-hub"
  vpn_gateway_sku  = "VpnGw1"              # Standard SKU for production
  vpn_type         = "RouteBased"          # Standard for most scenarios
  enable_bgp       = false                 # Keep simple for basic setup
  
  local_network_gateway = {
    name            = "local-gateway-office"
    gateway_address = "203.0.113.12"           # Replace with YOUR actual public IP
    address_space   = ["192.168.0.0/16"]       # Replace with YOUR on-premises networks
  }
  
  vpn_connection = {
    name                = "vpn-connection-hub"
    shared_key          = "YourSecureSharedKey123!"  # Use a strong pre-shared key
    connection_protocol = "IKEv2"                     # Standard protocol
  }
}

# Virtual Machines (Deployed in Spoke)
virtual_machines = {
  "app-vm-01" = {
    vm_size             = "Standard_D2s_v3"
    subnet_name         = "subnet-app"
    resource_group_name = "rg-workload-app"
    enable_public_ip    = false              # Private VM in spoke
    os_disk_type        = "Premium_LRS"
    spoke_name          = "workload"         # Deploy to workload spoke
    # No NSG rules needed for private VM
  }
  "data-vm-01" = {
    vm_size             = "Standard_D4s_v3"
    subnet_name         = "subnet-data"
    resource_group_name = "rg-workload-data"
    enable_public_ip    = false              # Private VM in spoke
    os_disk_type        = "Premium_LRS"
    spoke_name          = "workload"         # Deploy to workload spoke
    # No NSG rules needed for private VM
  }
  "mgmt-vm-01" = {
    vm_size             = "Standard_B2s"
    subnet_name         = "subnet-mgmt"
    resource_group_name = "rg-workload-mgmt"
    enable_public_ip    = true               # Management VM with public access
    os_disk_type        = "Premium_LRS"
    spoke_name          = "workload"         # Deploy to workload spoke
    nsg_rules = [
      {
        name                       = "AllowRDP"
        priority                   = 1000
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "3389"
        source_address_prefix      = "93.161.18.8/32"  # Allow RDP only from your IP
        destination_address_prefix = "*"
      }
    ]
  }
}


# Deployment Notes:
# 1. VPN Gateway will be deployed in the hub VNet
# 2. VMs will be deployed in the spoke VNet
# 3. VNet peering will connect hub and spoke
# 4. Traffic from spoke VMs can reach on-premises via hub VPN
# 5. Management VM has public IP for direct access
# 6. Application and data VMs are private and accessed via hub connectivity
